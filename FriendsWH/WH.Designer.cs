//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.Entity.Core.EntityClient;
using System.Data.Entity.Core.Objects;
using System.Data.Entity.Core.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Ex_Per_Item_Customer", "Customer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Customer), "Ex_Per_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Ex_Per_Item), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Ex_Per_Item_Exchange_Permission", "Export_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Export_Permission), "Ex_Per_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Ex_Per_Item), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Ex_Per_Item_Item", "Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Item), "Ex_Per_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Ex_Per_Item), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Exchange_Permission_Warehouse", "Warehouse", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Warehouse), "Export_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Export_Permission), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Items_MU_Item", "Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Item), "Items_MU", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Items_MU), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Sup_Per_Item_Item", "Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Item), "Sup_Per_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Sup_Per_Item), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Transfer_Item", "Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Item), "Transfer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Transfer), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Sup_Per_Item_Supplier", "Supplier", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Supplier), "Sup_Per_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Sup_Per_Item), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Sup_Per_Item_Supply_Permission", "Supply_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Supply_Permission), "Sup_Per_Item", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Sup_Per_Item), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Transfer_Supplier", "Supplier", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Supplier), "Transfer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Transfer), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Supply_Permission_Warehouse", "Warehouse", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Warehouse), "Supply_Permission", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Supply_Permission), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Transfer_Warehouse", "Warehouse", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Warehouse), "Transfer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Transfer), true)]
[assembly: EdmRelationshipAttribute("FriendsModel", "FK_Transfer_Warehouse1", "Warehouse", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.One, typeof(FriendsWH.Warehouse), "Transfer", System.Data.Entity.Core.Metadata.Edm.RelationshipMultiplicity.Many, typeof(FriendsWH.Transfer), true)]

#endregion

namespace FriendsWH
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class FriendsEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new FriendsEntities object using the connection string found in the 'FriendsEntities' section of the application configuration file.
        /// </summary>
        public FriendsEntities() : base("name=FriendsEntities", "FriendsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FriendsEntities object.
        /// </summary>
        public FriendsEntities(string connectionString) : base(connectionString, "FriendsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new FriendsEntities object.
        /// </summary>
        public FriendsEntities(EntityConnection connection) : base(connection, "FriendsEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Customer> Customers
        {
            get
            {
                if ((_Customers == null))
                {
                    _Customers = base.CreateObjectSet<Customer>("Customers");
                }
                return _Customers;
            }
        }
        private ObjectSet<Customer> _Customers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Ex_Per_Item> Ex_Per_Item
        {
            get
            {
                if ((_Ex_Per_Item == null))
                {
                    _Ex_Per_Item = base.CreateObjectSet<Ex_Per_Item>("Ex_Per_Item");
                }
                return _Ex_Per_Item;
            }
        }
        private ObjectSet<Ex_Per_Item> _Ex_Per_Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Export_Permission> Export_Permission
        {
            get
            {
                if ((_Export_Permission == null))
                {
                    _Export_Permission = base.CreateObjectSet<Export_Permission>("Export_Permission");
                }
                return _Export_Permission;
            }
        }
        private ObjectSet<Export_Permission> _Export_Permission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Item> Items
        {
            get
            {
                if ((_Items == null))
                {
                    _Items = base.CreateObjectSet<Item>("Items");
                }
                return _Items;
            }
        }
        private ObjectSet<Item> _Items;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Items_MU> Items_MU
        {
            get
            {
                if ((_Items_MU == null))
                {
                    _Items_MU = base.CreateObjectSet<Items_MU>("Items_MU");
                }
                return _Items_MU;
            }
        }
        private ObjectSet<Items_MU> _Items_MU;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Sup_Per_Item> Sup_Per_Item
        {
            get
            {
                if ((_Sup_Per_Item == null))
                {
                    _Sup_Per_Item = base.CreateObjectSet<Sup_Per_Item>("Sup_Per_Item");
                }
                return _Sup_Per_Item;
            }
        }
        private ObjectSet<Sup_Per_Item> _Sup_Per_Item;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supplier> Suppliers
        {
            get
            {
                if ((_Suppliers == null))
                {
                    _Suppliers = base.CreateObjectSet<Supplier>("Suppliers");
                }
                return _Suppliers;
            }
        }
        private ObjectSet<Supplier> _Suppliers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Supply_Permission> Supply_Permission
        {
            get
            {
                if ((_Supply_Permission == null))
                {
                    _Supply_Permission = base.CreateObjectSet<Supply_Permission>("Supply_Permission");
                }
                return _Supply_Permission;
            }
        }
        private ObjectSet<Supply_Permission> _Supply_Permission;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<sysdiagram> sysdiagrams
        {
            get
            {
                if ((_sysdiagrams == null))
                {
                    _sysdiagrams = base.CreateObjectSet<sysdiagram>("sysdiagrams");
                }
                return _sysdiagrams;
            }
        }
        private ObjectSet<sysdiagram> _sysdiagrams;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Transfer> Transfers
        {
            get
            {
                if ((_Transfers == null))
                {
                    _Transfers = base.CreateObjectSet<Transfer>("Transfers");
                }
                return _Transfers;
            }
        }
        private ObjectSet<Transfer> _Transfers;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Warehouse> Warehouses
        {
            get
            {
                if ((_Warehouses == null))
                {
                    _Warehouses = base.CreateObjectSet<Warehouse>("Warehouses");
                }
                return _Warehouses;
            }
        }
        private ObjectSet<Warehouse> _Warehouses;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Customers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCustomers(Customer customer)
        {
            base.AddObject("Customers", customer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Ex_Per_Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEx_Per_Item(Ex_Per_Item ex_Per_Item)
        {
            base.AddObject("Ex_Per_Item", ex_Per_Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Export_Permission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToExport_Permission(Export_Permission export_Permission)
        {
            base.AddObject("Export_Permission", export_Permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems(Item item)
        {
            base.AddObject("Items", item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Items_MU EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToItems_MU(Items_MU items_MU)
        {
            base.AddObject("Items_MU", items_MU);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Sup_Per_Item EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSup_Per_Item(Sup_Per_Item sup_Per_Item)
        {
            base.AddObject("Sup_Per_Item", sup_Per_Item);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Suppliers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSuppliers(Supplier supplier)
        {
            base.AddObject("Suppliers", supplier);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Supply_Permission EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToSupply_Permission(Supply_Permission supply_Permission)
        {
            base.AddObject("Supply_Permission", supply_Permission);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the sysdiagrams EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddTosysdiagrams(sysdiagram sysdiagram)
        {
            base.AddObject("sysdiagrams", sysdiagram);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Transfers EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTransfers(Transfer transfer)
        {
            base.AddObject("Transfers", transfer);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Warehouses EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToWarehouses(Warehouse warehouse)
        {
            base.AddObject("Warehouses", warehouse);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Customer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Customer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Customer object.
        /// </summary>
        /// <param name="customer_Id">Initial value of the Customer_Id property.</param>
        /// <param name="customer_Name">Initial value of the Customer_Name property.</param>
        /// <param name="customer_Phone">Initial value of the Customer_Phone property.</param>
        /// <param name="customer_Email">Initial value of the Customer_Email property.</param>
        public static Customer CreateCustomer(global::System.Int32 customer_Id, global::System.String customer_Name, global::System.Int32 customer_Phone, global::System.String customer_Email)
        {
            Customer customer = new Customer();
            customer.Customer_Id = customer_Id;
            customer.Customer_Name = customer_Name;
            customer.Customer_Phone = customer_Phone;
            customer.Customer_Email = customer_Email;
            return customer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Customer_Id
        {
            get
            {
                return _Customer_Id;
            }
            set
            {
                if (_Customer_Id != value)
                {
                    OnCustomer_IdChanging(value);
                    ReportPropertyChanging("Customer_Id");
                    _Customer_Id = StructuralObject.SetValidValue(value, "Customer_Id");
                    ReportPropertyChanged("Customer_Id");
                    OnCustomer_IdChanged();
                }
            }
        }
        private global::System.Int32 _Customer_Id;
        partial void OnCustomer_IdChanging(global::System.Int32 value);
        partial void OnCustomer_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Customer_Name
        {
            get
            {
                return _Customer_Name;
            }
            set
            {
                OnCustomer_NameChanging(value);
                ReportPropertyChanging("Customer_Name");
                _Customer_Name = StructuralObject.SetValidValue(value, false, "Customer_Name");
                ReportPropertyChanged("Customer_Name");
                OnCustomer_NameChanged();
            }
        }
        private global::System.String _Customer_Name;
        partial void OnCustomer_NameChanging(global::System.String value);
        partial void OnCustomer_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Customer_Phone
        {
            get
            {
                return _Customer_Phone;
            }
            set
            {
                OnCustomer_PhoneChanging(value);
                ReportPropertyChanging("Customer_Phone");
                _Customer_Phone = StructuralObject.SetValidValue(value, "Customer_Phone");
                ReportPropertyChanged("Customer_Phone");
                OnCustomer_PhoneChanged();
            }
        }
        private global::System.Int32 _Customer_Phone;
        partial void OnCustomer_PhoneChanging(global::System.Int32 value);
        partial void OnCustomer_PhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Customer_Fax
        {
            get
            {
                return _Customer_Fax;
            }
            set
            {
                OnCustomer_FaxChanging(value);
                ReportPropertyChanging("Customer_Fax");
                _Customer_Fax = StructuralObject.SetValidValue(value, "Customer_Fax");
                ReportPropertyChanged("Customer_Fax");
                OnCustomer_FaxChanged();
            }
        }
        private Nullable<global::System.Int32> _Customer_Fax;
        partial void OnCustomer_FaxChanging(Nullable<global::System.Int32> value);
        partial void OnCustomer_FaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Customer_Mobile_Phone
        {
            get
            {
                return _Customer_Mobile_Phone;
            }
            set
            {
                OnCustomer_Mobile_PhoneChanging(value);
                ReportPropertyChanging("Customer_Mobile_Phone");
                _Customer_Mobile_Phone = StructuralObject.SetValidValue(value, "Customer_Mobile_Phone");
                ReportPropertyChanged("Customer_Mobile_Phone");
                OnCustomer_Mobile_PhoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Customer_Mobile_Phone;
        partial void OnCustomer_Mobile_PhoneChanging(Nullable<global::System.Int32> value);
        partial void OnCustomer_Mobile_PhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Customer_Email
        {
            get
            {
                return _Customer_Email;
            }
            set
            {
                OnCustomer_EmailChanging(value);
                ReportPropertyChanging("Customer_Email");
                _Customer_Email = StructuralObject.SetValidValue(value, false, "Customer_Email");
                ReportPropertyChanged("Customer_Email");
                OnCustomer_EmailChanged();
            }
        }
        private global::System.String _Customer_Email;
        partial void OnCustomer_EmailChanging(global::System.String value);
        partial void OnCustomer_EmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer_Website
        {
            get
            {
                return _Customer_Website;
            }
            set
            {
                OnCustomer_WebsiteChanging(value);
                ReportPropertyChanging("Customer_Website");
                _Customer_Website = StructuralObject.SetValidValue(value, true, "Customer_Website");
                ReportPropertyChanged("Customer_Website");
                OnCustomer_WebsiteChanged();
            }
        }
        private global::System.String _Customer_Website;
        partial void OnCustomer_WebsiteChanging(global::System.String value);
        partial void OnCustomer_WebsiteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Ex_Per_Item_Customer", "Ex_Per_Item")]
        public EntityCollection<Ex_Per_Item> Ex_Per_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ex_Per_Item>("FriendsModel.FK_Ex_Per_Item_Customer", "Ex_Per_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ex_Per_Item>("FriendsModel.FK_Ex_Per_Item_Customer", "Ex_Per_Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Ex_Per_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Ex_Per_Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Ex_Per_Item object.
        /// </summary>
        /// <param name="ex_Per_Id">Initial value of the Ex_Per_Id property.</param>
        /// <param name="ex_Per_Item_Id">Initial value of the Ex_Per_Item_Id property.</param>
        /// <param name="cus_ID">Initial value of the Cus_ID property.</param>
        /// <param name="ex_Per_Item_Quantity">Initial value of the Ex_Per_Item_Quantity property.</param>
        public static Ex_Per_Item CreateEx_Per_Item(global::System.Int32 ex_Per_Id, global::System.Int32 ex_Per_Item_Id, global::System.Int32 cus_ID, global::System.Int32 ex_Per_Item_Quantity)
        {
            Ex_Per_Item ex_Per_Item = new Ex_Per_Item();
            ex_Per_Item.Ex_Per_Id = ex_Per_Id;
            ex_Per_Item.Ex_Per_Item_Id = ex_Per_Item_Id;
            ex_Per_Item.Cus_ID = cus_ID;
            ex_Per_Item.Ex_Per_Item_Quantity = ex_Per_Item_Quantity;
            return ex_Per_Item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ex_Per_Id
        {
            get
            {
                return _Ex_Per_Id;
            }
            set
            {
                if (_Ex_Per_Id != value)
                {
                    OnEx_Per_IdChanging(value);
                    ReportPropertyChanging("Ex_Per_Id");
                    _Ex_Per_Id = StructuralObject.SetValidValue(value, "Ex_Per_Id");
                    ReportPropertyChanged("Ex_Per_Id");
                    OnEx_Per_IdChanged();
                }
            }
        }
        private global::System.Int32 _Ex_Per_Id;
        partial void OnEx_Per_IdChanging(global::System.Int32 value);
        partial void OnEx_Per_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ex_Per_Item_Id
        {
            get
            {
                return _Ex_Per_Item_Id;
            }
            set
            {
                if (_Ex_Per_Item_Id != value)
                {
                    OnEx_Per_Item_IdChanging(value);
                    ReportPropertyChanging("Ex_Per_Item_Id");
                    _Ex_Per_Item_Id = StructuralObject.SetValidValue(value, "Ex_Per_Item_Id");
                    ReportPropertyChanged("Ex_Per_Item_Id");
                    OnEx_Per_Item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Ex_Per_Item_Id;
        partial void OnEx_Per_Item_IdChanging(global::System.Int32 value);
        partial void OnEx_Per_Item_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Cus_ID
        {
            get
            {
                return _Cus_ID;
            }
            set
            {
                OnCus_IDChanging(value);
                ReportPropertyChanging("Cus_ID");
                _Cus_ID = StructuralObject.SetValidValue(value, "Cus_ID");
                ReportPropertyChanged("Cus_ID");
                OnCus_IDChanged();
            }
        }
        private global::System.Int32 _Cus_ID;
        partial void OnCus_IDChanging(global::System.Int32 value);
        partial void OnCus_IDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ex_Per_Item_Quantity
        {
            get
            {
                return _Ex_Per_Item_Quantity;
            }
            set
            {
                OnEx_Per_Item_QuantityChanging(value);
                ReportPropertyChanging("Ex_Per_Item_Quantity");
                _Ex_Per_Item_Quantity = StructuralObject.SetValidValue(value, "Ex_Per_Item_Quantity");
                ReportPropertyChanged("Ex_Per_Item_Quantity");
                OnEx_Per_Item_QuantityChanged();
            }
        }
        private global::System.Int32 _Ex_Per_Item_Quantity;
        partial void OnEx_Per_Item_QuantityChanging(global::System.Int32 value);
        partial void OnEx_Per_Item_QuantityChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Ex_Per_Item_Customer", "Customer")]
        public Customer Customer
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FriendsModel.FK_Ex_Per_Item_Customer", "Customer").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FriendsModel.FK_Ex_Per_Item_Customer", "Customer").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Customer> CustomerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Customer>("FriendsModel.FK_Ex_Per_Item_Customer", "Customer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Customer>("FriendsModel.FK_Ex_Per_Item_Customer", "Customer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Ex_Per_Item_Exchange_Permission", "Export_Permission")]
        public Export_Permission Export_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Export_Permission>("FriendsModel.FK_Ex_Per_Item_Exchange_Permission", "Export_Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Export_Permission>("FriendsModel.FK_Ex_Per_Item_Exchange_Permission", "Export_Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Export_Permission> Export_PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Export_Permission>("FriendsModel.FK_Ex_Per_Item_Exchange_Permission", "Export_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Export_Permission>("FriendsModel.FK_Ex_Per_Item_Exchange_Permission", "Export_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Ex_Per_Item_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Ex_Per_Item_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Ex_Per_Item_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Ex_Per_Item_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("FriendsModel.FK_Ex_Per_Item_Item", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Export_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Export_Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Export_Permission object.
        /// </summary>
        /// <param name="ex_Per_Id">Initial value of the Ex_Per_Id property.</param>
        /// <param name="ex_Per_WH_Id">Initial value of the Ex_Per_WH_Id property.</param>
        /// <param name="ex_Per_Date">Initial value of the Ex_Per_Date property.</param>
        public static Export_Permission CreateExport_Permission(global::System.Int32 ex_Per_Id, global::System.Int32 ex_Per_WH_Id, global::System.DateTime ex_Per_Date)
        {
            Export_Permission export_Permission = new Export_Permission();
            export_Permission.Ex_Per_Id = ex_Per_Id;
            export_Permission.Ex_Per_WH_Id = ex_Per_WH_Id;
            export_Permission.Ex_Per_Date = ex_Per_Date;
            return export_Permission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ex_Per_Id
        {
            get
            {
                return _Ex_Per_Id;
            }
            set
            {
                if (_Ex_Per_Id != value)
                {
                    OnEx_Per_IdChanging(value);
                    ReportPropertyChanging("Ex_Per_Id");
                    _Ex_Per_Id = StructuralObject.SetValidValue(value, "Ex_Per_Id");
                    ReportPropertyChanged("Ex_Per_Id");
                    OnEx_Per_IdChanged();
                }
            }
        }
        private global::System.Int32 _Ex_Per_Id;
        partial void OnEx_Per_IdChanging(global::System.Int32 value);
        partial void OnEx_Per_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ex_Per_WH_Id
        {
            get
            {
                return _Ex_Per_WH_Id;
            }
            set
            {
                OnEx_Per_WH_IdChanging(value);
                ReportPropertyChanging("Ex_Per_WH_Id");
                _Ex_Per_WH_Id = StructuralObject.SetValidValue(value, "Ex_Per_WH_Id");
                ReportPropertyChanged("Ex_Per_WH_Id");
                OnEx_Per_WH_IdChanged();
            }
        }
        private global::System.Int32 _Ex_Per_WH_Id;
        partial void OnEx_Per_WH_IdChanging(global::System.Int32 value);
        partial void OnEx_Per_WH_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Ex_Per_Date
        {
            get
            {
                return _Ex_Per_Date;
            }
            set
            {
                OnEx_Per_DateChanging(value);
                ReportPropertyChanging("Ex_Per_Date");
                _Ex_Per_Date = StructuralObject.SetValidValue(value, "Ex_Per_Date");
                ReportPropertyChanged("Ex_Per_Date");
                OnEx_Per_DateChanged();
            }
        }
        private global::System.DateTime _Ex_Per_Date;
        partial void OnEx_Per_DateChanging(global::System.DateTime value);
        partial void OnEx_Per_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Ex_Per_Item_Exchange_Permission", "Ex_Per_Item")]
        public EntityCollection<Ex_Per_Item> Ex_Per_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ex_Per_Item>("FriendsModel.FK_Ex_Per_Item_Exchange_Permission", "Ex_Per_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ex_Per_Item>("FriendsModel.FK_Ex_Per_Item_Exchange_Permission", "Ex_Per_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Exchange_Permission_Warehouse", "Warehouse")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Exchange_Permission_Warehouse", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Exchange_Permission_Warehouse", "Warehouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Exchange_Permission_Warehouse", "Warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("FriendsModel.FK_Exchange_Permission_Warehouse", "Warehouse", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Item object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        /// <param name="item_Code">Initial value of the Item_Code property.</param>
        /// <param name="item_Name">Initial value of the Item_Name property.</param>
        public static Item CreateItem(global::System.Int32 item_Id, global::System.Int32 item_Code, global::System.String item_Name)
        {
            Item item = new Item();
            item.Item_Id = item_Id;
            item.Item_Code = item_Code;
            item.Item_Name = item_Name;
            return item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value, "Item_Id");
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Code
        {
            get
            {
                return _Item_Code;
            }
            set
            {
                OnItem_CodeChanging(value);
                ReportPropertyChanging("Item_Code");
                _Item_Code = StructuralObject.SetValidValue(value, "Item_Code");
                ReportPropertyChanged("Item_Code");
                OnItem_CodeChanged();
            }
        }
        private global::System.Int32 _Item_Code;
        partial void OnItem_CodeChanging(global::System.Int32 value);
        partial void OnItem_CodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Item_Name
        {
            get
            {
                return _Item_Name;
            }
            set
            {
                OnItem_NameChanging(value);
                ReportPropertyChanging("Item_Name");
                _Item_Name = StructuralObject.SetValidValue(value, false, "Item_Name");
                ReportPropertyChanged("Item_Name");
                OnItem_NameChanged();
            }
        }
        private global::System.String _Item_Name;
        partial void OnItem_NameChanging(global::System.String value);
        partial void OnItem_NameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Ex_Per_Item_Item", "Ex_Per_Item")]
        public EntityCollection<Ex_Per_Item> Ex_Per_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Ex_Per_Item>("FriendsModel.FK_Ex_Per_Item_Item", "Ex_Per_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Ex_Per_Item>("FriendsModel.FK_Ex_Per_Item_Item", "Ex_Per_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Items_MU_Item", "Items_MU")]
        public EntityCollection<Items_MU> Items_MU
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Items_MU>("FriendsModel.FK_Items_MU_Item", "Items_MU");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Items_MU>("FriendsModel.FK_Items_MU_Item", "Items_MU", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Sup_Per_Item_Item", "Sup_Per_Item")]
        public EntityCollection<Sup_Per_Item> Sup_Per_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sup_Per_Item>("FriendsModel.FK_Sup_Per_Item_Item", "Sup_Per_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sup_Per_Item>("FriendsModel.FK_Sup_Per_Item_Item", "Sup_Per_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Item", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Item", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Item", "Transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Items_MU")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Items_MU : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Items_MU object.
        /// </summary>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        /// <param name="mU_Name">Initial value of the MU_Name property.</param>
        public static Items_MU CreateItems_MU(global::System.Int32 item_Id, global::System.String mU_Name)
        {
            Items_MU items_MU = new Items_MU();
            items_MU.Item_Id = item_Id;
            items_MU.MU_Name = mU_Name;
            return items_MU;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                if (_Item_Id != value)
                {
                    OnItem_IdChanging(value);
                    ReportPropertyChanging("Item_Id");
                    _Item_Id = StructuralObject.SetValidValue(value, "Item_Id");
                    ReportPropertyChanged("Item_Id");
                    OnItem_IdChanged();
                }
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MU_Name
        {
            get
            {
                return _MU_Name;
            }
            set
            {
                if (_MU_Name != value)
                {
                    OnMU_NameChanging(value);
                    ReportPropertyChanging("MU_Name");
                    _MU_Name = StructuralObject.SetValidValue(value, false, "MU_Name");
                    ReportPropertyChanged("MU_Name");
                    OnMU_NameChanged();
                }
            }
        }
        private global::System.String _MU_Name;
        partial void OnMU_NameChanging(global::System.String value);
        partial void OnMU_NameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Items_MU_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Items_MU_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Items_MU_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Items_MU_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("FriendsModel.FK_Items_MU_Item", "Item", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Sup_Per_Item")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Sup_Per_Item : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Sup_Per_Item object.
        /// </summary>
        /// <param name="sup_Per_Id">Initial value of the Sup_Per_Id property.</param>
        /// <param name="sup_Per_Item_Id">Initial value of the Sup_Per_Item_Id property.</param>
        /// <param name="sup_Per_Item_Quantity">Initial value of the Sup_Per_Item_Quantity property.</param>
        /// <param name="sup_Per_Item_Pro_Date">Initial value of the Sup_Per_Item_Pro_Date property.</param>
        /// <param name="sup_Per_Item_Validation">Initial value of the Sup_Per_Item_Validation property.</param>
        /// <param name="sup_Id">Initial value of the Sup_Id property.</param>
        public static Sup_Per_Item CreateSup_Per_Item(global::System.Int32 sup_Per_Id, global::System.Int32 sup_Per_Item_Id, global::System.Int32 sup_Per_Item_Quantity, global::System.DateTime sup_Per_Item_Pro_Date, global::System.Int32 sup_Per_Item_Validation, global::System.Int32 sup_Id)
        {
            Sup_Per_Item sup_Per_Item = new Sup_Per_Item();
            sup_Per_Item.Sup_Per_Id = sup_Per_Id;
            sup_Per_Item.Sup_Per_Item_Id = sup_Per_Item_Id;
            sup_Per_Item.Sup_Per_Item_Quantity = sup_Per_Item_Quantity;
            sup_Per_Item.Sup_Per_Item_Pro_Date = sup_Per_Item_Pro_Date;
            sup_Per_Item.Sup_Per_Item_Validation = sup_Per_Item_Validation;
            sup_Per_Item.Sup_Id = sup_Id;
            return sup_Per_Item;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Per_Id
        {
            get
            {
                return _Sup_Per_Id;
            }
            set
            {
                if (_Sup_Per_Id != value)
                {
                    OnSup_Per_IdChanging(value);
                    ReportPropertyChanging("Sup_Per_Id");
                    _Sup_Per_Id = StructuralObject.SetValidValue(value, "Sup_Per_Id");
                    ReportPropertyChanged("Sup_Per_Id");
                    OnSup_Per_IdChanged();
                }
            }
        }
        private global::System.Int32 _Sup_Per_Id;
        partial void OnSup_Per_IdChanging(global::System.Int32 value);
        partial void OnSup_Per_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Per_Item_Id
        {
            get
            {
                return _Sup_Per_Item_Id;
            }
            set
            {
                if (_Sup_Per_Item_Id != value)
                {
                    OnSup_Per_Item_IdChanging(value);
                    ReportPropertyChanging("Sup_Per_Item_Id");
                    _Sup_Per_Item_Id = StructuralObject.SetValidValue(value, "Sup_Per_Item_Id");
                    ReportPropertyChanged("Sup_Per_Item_Id");
                    OnSup_Per_Item_IdChanged();
                }
            }
        }
        private global::System.Int32 _Sup_Per_Item_Id;
        partial void OnSup_Per_Item_IdChanging(global::System.Int32 value);
        partial void OnSup_Per_Item_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Per_Item_Quantity
        {
            get
            {
                return _Sup_Per_Item_Quantity;
            }
            set
            {
                OnSup_Per_Item_QuantityChanging(value);
                ReportPropertyChanging("Sup_Per_Item_Quantity");
                _Sup_Per_Item_Quantity = StructuralObject.SetValidValue(value, "Sup_Per_Item_Quantity");
                ReportPropertyChanged("Sup_Per_Item_Quantity");
                OnSup_Per_Item_QuantityChanged();
            }
        }
        private global::System.Int32 _Sup_Per_Item_Quantity;
        partial void OnSup_Per_Item_QuantityChanging(global::System.Int32 value);
        partial void OnSup_Per_Item_QuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Sup_Per_Item_Pro_Date
        {
            get
            {
                return _Sup_Per_Item_Pro_Date;
            }
            set
            {
                OnSup_Per_Item_Pro_DateChanging(value);
                ReportPropertyChanging("Sup_Per_Item_Pro_Date");
                _Sup_Per_Item_Pro_Date = StructuralObject.SetValidValue(value, "Sup_Per_Item_Pro_Date");
                ReportPropertyChanged("Sup_Per_Item_Pro_Date");
                OnSup_Per_Item_Pro_DateChanged();
            }
        }
        private global::System.DateTime _Sup_Per_Item_Pro_Date;
        partial void OnSup_Per_Item_Pro_DateChanging(global::System.DateTime value);
        partial void OnSup_Per_Item_Pro_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Per_Item_Validation
        {
            get
            {
                return _Sup_Per_Item_Validation;
            }
            set
            {
                OnSup_Per_Item_ValidationChanging(value);
                ReportPropertyChanging("Sup_Per_Item_Validation");
                _Sup_Per_Item_Validation = StructuralObject.SetValidValue(value, "Sup_Per_Item_Validation");
                ReportPropertyChanged("Sup_Per_Item_Validation");
                OnSup_Per_Item_ValidationChanged();
            }
        }
        private global::System.Int32 _Sup_Per_Item_Validation;
        partial void OnSup_Per_Item_ValidationChanging(global::System.Int32 value);
        partial void OnSup_Per_Item_ValidationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Id
        {
            get
            {
                return _Sup_Id;
            }
            set
            {
                OnSup_IdChanging(value);
                ReportPropertyChanging("Sup_Id");
                _Sup_Id = StructuralObject.SetValidValue(value, "Sup_Id");
                ReportPropertyChanged("Sup_Id");
                OnSup_IdChanged();
            }
        }
        private global::System.Int32 _Sup_Id;
        partial void OnSup_IdChanging(global::System.Int32 value);
        partial void OnSup_IdChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Sup_Per_Item_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Sup_Per_Item_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Sup_Per_Item_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Sup_Per_Item_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("FriendsModel.FK_Sup_Per_Item_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Sup_Per_Item_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("FriendsModel.FK_Sup_Per_Item_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("FriendsModel.FK_Sup_Per_Item_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("FriendsModel.FK_Sup_Per_Item_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("FriendsModel.FK_Sup_Per_Item_Supplier", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Sup_Per_Item_Supply_Permission", "Supply_Permission")]
        public Supply_Permission Supply_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply_Permission>("FriendsModel.FK_Sup_Per_Item_Supply_Permission", "Supply_Permission").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply_Permission>("FriendsModel.FK_Sup_Per_Item_Supply_Permission", "Supply_Permission").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supply_Permission> Supply_PermissionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supply_Permission>("FriendsModel.FK_Sup_Per_Item_Supply_Permission", "Supply_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supply_Permission>("FriendsModel.FK_Sup_Per_Item_Supply_Permission", "Supply_Permission", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Supplier")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supplier : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supplier object.
        /// </summary>
        /// <param name="supplier_Id">Initial value of the Supplier_Id property.</param>
        /// <param name="supplier_Name">Initial value of the Supplier_Name property.</param>
        /// <param name="supplier_Phone">Initial value of the Supplier_Phone property.</param>
        /// <param name="supplier_Email">Initial value of the Supplier_Email property.</param>
        public static Supplier CreateSupplier(global::System.Int32 supplier_Id, global::System.String supplier_Name, global::System.Int32 supplier_Phone, global::System.String supplier_Email)
        {
            Supplier supplier = new Supplier();
            supplier.Supplier_Id = supplier_Id;
            supplier.Supplier_Name = supplier_Name;
            supplier.Supplier_Phone = supplier_Phone;
            supplier.Supplier_Email = supplier_Email;
            return supplier;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supplier_Id
        {
            get
            {
                return _Supplier_Id;
            }
            set
            {
                if (_Supplier_Id != value)
                {
                    OnSupplier_IdChanging(value);
                    ReportPropertyChanging("Supplier_Id");
                    _Supplier_Id = StructuralObject.SetValidValue(value, "Supplier_Id");
                    ReportPropertyChanged("Supplier_Id");
                    OnSupplier_IdChanged();
                }
            }
        }
        private global::System.Int32 _Supplier_Id;
        partial void OnSupplier_IdChanging(global::System.Int32 value);
        partial void OnSupplier_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supplier_Name
        {
            get
            {
                return _Supplier_Name;
            }
            set
            {
                OnSupplier_NameChanging(value);
                ReportPropertyChanging("Supplier_Name");
                _Supplier_Name = StructuralObject.SetValidValue(value, false, "Supplier_Name");
                ReportPropertyChanged("Supplier_Name");
                OnSupplier_NameChanged();
            }
        }
        private global::System.String _Supplier_Name;
        partial void OnSupplier_NameChanging(global::System.String value);
        partial void OnSupplier_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Supplier_Phone
        {
            get
            {
                return _Supplier_Phone;
            }
            set
            {
                OnSupplier_PhoneChanging(value);
                ReportPropertyChanging("Supplier_Phone");
                _Supplier_Phone = StructuralObject.SetValidValue(value, "Supplier_Phone");
                ReportPropertyChanged("Supplier_Phone");
                OnSupplier_PhoneChanged();
            }
        }
        private global::System.Int32 _Supplier_Phone;
        partial void OnSupplier_PhoneChanging(global::System.Int32 value);
        partial void OnSupplier_PhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Supplier_Fax
        {
            get
            {
                return _Supplier_Fax;
            }
            set
            {
                OnSupplier_FaxChanging(value);
                ReportPropertyChanging("Supplier_Fax");
                _Supplier_Fax = StructuralObject.SetValidValue(value, "Supplier_Fax");
                ReportPropertyChanged("Supplier_Fax");
                OnSupplier_FaxChanged();
            }
        }
        private Nullable<global::System.Int32> _Supplier_Fax;
        partial void OnSupplier_FaxChanging(Nullable<global::System.Int32> value);
        partial void OnSupplier_FaxChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Supplier_Mobile_Phone
        {
            get
            {
                return _Supplier_Mobile_Phone;
            }
            set
            {
                OnSupplier_Mobile_PhoneChanging(value);
                ReportPropertyChanging("Supplier_Mobile_Phone");
                _Supplier_Mobile_Phone = StructuralObject.SetValidValue(value, "Supplier_Mobile_Phone");
                ReportPropertyChanged("Supplier_Mobile_Phone");
                OnSupplier_Mobile_PhoneChanged();
            }
        }
        private Nullable<global::System.Int32> _Supplier_Mobile_Phone;
        partial void OnSupplier_Mobile_PhoneChanging(Nullable<global::System.Int32> value);
        partial void OnSupplier_Mobile_PhoneChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Supplier_Email
        {
            get
            {
                return _Supplier_Email;
            }
            set
            {
                OnSupplier_EmailChanging(value);
                ReportPropertyChanging("Supplier_Email");
                _Supplier_Email = StructuralObject.SetValidValue(value, false, "Supplier_Email");
                ReportPropertyChanged("Supplier_Email");
                OnSupplier_EmailChanged();
            }
        }
        private global::System.String _Supplier_Email;
        partial void OnSupplier_EmailChanging(global::System.String value);
        partial void OnSupplier_EmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Supplier_Website
        {
            get
            {
                return _Supplier_Website;
            }
            set
            {
                OnSupplier_WebsiteChanging(value);
                ReportPropertyChanging("Supplier_Website");
                _Supplier_Website = StructuralObject.SetValidValue(value, true, "Supplier_Website");
                ReportPropertyChanged("Supplier_Website");
                OnSupplier_WebsiteChanged();
            }
        }
        private global::System.String _Supplier_Website;
        partial void OnSupplier_WebsiteChanging(global::System.String value);
        partial void OnSupplier_WebsiteChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Sup_Per_Item_Supplier", "Sup_Per_Item")]
        public EntityCollection<Sup_Per_Item> Sup_Per_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sup_Per_Item>("FriendsModel.FK_Sup_Per_Item_Supplier", "Sup_Per_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sup_Per_Item>("FriendsModel.FK_Sup_Per_Item_Supplier", "Sup_Per_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Supplier", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Supplier", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Supplier", "Transfer", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Supply_Permission")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Supply_Permission : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Supply_Permission object.
        /// </summary>
        /// <param name="sup_Per_Id">Initial value of the Sup_Per_Id property.</param>
        /// <param name="sup_Per_WH_Id">Initial value of the Sup_Per_WH_Id property.</param>
        /// <param name="sup_Per_Date">Initial value of the Sup_Per_Date property.</param>
        public static Supply_Permission CreateSupply_Permission(global::System.Int32 sup_Per_Id, global::System.Int32 sup_Per_WH_Id, global::System.DateTime sup_Per_Date)
        {
            Supply_Permission supply_Permission = new Supply_Permission();
            supply_Permission.Sup_Per_Id = sup_Per_Id;
            supply_Permission.Sup_Per_WH_Id = sup_Per_WH_Id;
            supply_Permission.Sup_Per_Date = sup_Per_Date;
            return supply_Permission;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Per_Id
        {
            get
            {
                return _Sup_Per_Id;
            }
            set
            {
                if (_Sup_Per_Id != value)
                {
                    OnSup_Per_IdChanging(value);
                    ReportPropertyChanging("Sup_Per_Id");
                    _Sup_Per_Id = StructuralObject.SetValidValue(value, "Sup_Per_Id");
                    ReportPropertyChanged("Sup_Per_Id");
                    OnSup_Per_IdChanged();
                }
            }
        }
        private global::System.Int32 _Sup_Per_Id;
        partial void OnSup_Per_IdChanging(global::System.Int32 value);
        partial void OnSup_Per_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Per_WH_Id
        {
            get
            {
                return _Sup_Per_WH_Id;
            }
            set
            {
                OnSup_Per_WH_IdChanging(value);
                ReportPropertyChanging("Sup_Per_WH_Id");
                _Sup_Per_WH_Id = StructuralObject.SetValidValue(value, "Sup_Per_WH_Id");
                ReportPropertyChanged("Sup_Per_WH_Id");
                OnSup_Per_WH_IdChanged();
            }
        }
        private global::System.Int32 _Sup_Per_WH_Id;
        partial void OnSup_Per_WH_IdChanging(global::System.Int32 value);
        partial void OnSup_Per_WH_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Sup_Per_Date
        {
            get
            {
                return _Sup_Per_Date;
            }
            set
            {
                OnSup_Per_DateChanging(value);
                ReportPropertyChanging("Sup_Per_Date");
                _Sup_Per_Date = StructuralObject.SetValidValue(value, "Sup_Per_Date");
                ReportPropertyChanged("Sup_Per_Date");
                OnSup_Per_DateChanged();
            }
        }
        private global::System.DateTime _Sup_Per_Date;
        partial void OnSup_Per_DateChanging(global::System.DateTime value);
        partial void OnSup_Per_DateChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Sup_Per_Item_Supply_Permission", "Sup_Per_Item")]
        public EntityCollection<Sup_Per_Item> Sup_Per_Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Sup_Per_Item>("FriendsModel.FK_Sup_Per_Item_Supply_Permission", "Sup_Per_Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Sup_Per_Item>("FriendsModel.FK_Sup_Per_Item_Supply_Permission", "Sup_Per_Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Supply_Permission_Warehouse", "Warehouse")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Supply_Permission_Warehouse", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Supply_Permission_Warehouse", "Warehouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Supply_Permission_Warehouse", "Warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("FriendsModel.FK_Supply_Permission_Warehouse", "Warehouse", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="sysdiagram")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class sysdiagram : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new sysdiagram object.
        /// </summary>
        /// <param name="name">Initial value of the name property.</param>
        /// <param name="principal_id">Initial value of the principal_id property.</param>
        /// <param name="diagram_id">Initial value of the diagram_id property.</param>
        public static sysdiagram Createsysdiagram(global::System.String name, global::System.Int32 principal_id, global::System.Int32 diagram_id)
        {
            sysdiagram sysdiagram = new sysdiagram();
            sysdiagram.name = name;
            sysdiagram.principal_id = principal_id;
            sysdiagram.diagram_id = diagram_id;
            return sysdiagram;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String name
        {
            get
            {
                return _name;
            }
            set
            {
                OnnameChanging(value);
                ReportPropertyChanging("name");
                _name = StructuralObject.SetValidValue(value, false, "name");
                ReportPropertyChanged("name");
                OnnameChanged();
            }
        }
        private global::System.String _name;
        partial void OnnameChanging(global::System.String value);
        partial void OnnameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 principal_id
        {
            get
            {
                return _principal_id;
            }
            set
            {
                Onprincipal_idChanging(value);
                ReportPropertyChanging("principal_id");
                _principal_id = StructuralObject.SetValidValue(value, "principal_id");
                ReportPropertyChanged("principal_id");
                Onprincipal_idChanged();
            }
        }
        private global::System.Int32 _principal_id;
        partial void Onprincipal_idChanging(global::System.Int32 value);
        partial void Onprincipal_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 diagram_id
        {
            get
            {
                return _diagram_id;
            }
            set
            {
                if (_diagram_id != value)
                {
                    Ondiagram_idChanging(value);
                    ReportPropertyChanging("diagram_id");
                    _diagram_id = StructuralObject.SetValidValue(value, "diagram_id");
                    ReportPropertyChanged("diagram_id");
                    Ondiagram_idChanged();
                }
            }
        }
        private global::System.Int32 _diagram_id;
        partial void Ondiagram_idChanging(global::System.Int32 value);
        partial void Ondiagram_idChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> version
        {
            get
            {
                return _version;
            }
            set
            {
                OnversionChanging(value);
                ReportPropertyChanging("version");
                _version = StructuralObject.SetValidValue(value, "version");
                ReportPropertyChanged("version");
                OnversionChanged();
            }
        }
        private Nullable<global::System.Int32> _version;
        partial void OnversionChanging(Nullable<global::System.Int32> value);
        partial void OnversionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.Byte[] definition
        {
            get
            {
                return StructuralObject.GetValidValue(_definition);
            }
            set
            {
                OndefinitionChanging(value);
                ReportPropertyChanging("definition");
                _definition = StructuralObject.SetValidValue(value, true, "definition");
                ReportPropertyChanged("definition");
                OndefinitionChanged();
            }
        }
        private global::System.Byte[] _definition;
        partial void OndefinitionChanging(global::System.Byte[] value);
        partial void OndefinitionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Transfer")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Transfer : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Transfer object.
        /// </summary>
        /// <param name="trans_Id">Initial value of the Trans_Id property.</param>
        /// <param name="wH_From_Id">Initial value of the WH_From_Id property.</param>
        /// <param name="wH_To_Id">Initial value of the WH_To_Id property.</param>
        /// <param name="item_Id">Initial value of the Item_Id property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="sup_Id">Initial value of the Sup_Id property.</param>
        /// <param name="pro_Date">Initial value of the Pro_Date property.</param>
        /// <param name="validation">Initial value of the Validation property.</param>
        public static Transfer CreateTransfer(global::System.Int32 trans_Id, global::System.Int32 wH_From_Id, global::System.Int32 wH_To_Id, global::System.Int32 item_Id, global::System.Int32 quantity, global::System.Int32 sup_Id, global::System.DateTime pro_Date, global::System.Int32 validation)
        {
            Transfer transfer = new Transfer();
            transfer.Trans_Id = trans_Id;
            transfer.WH_From_Id = wH_From_Id;
            transfer.WH_To_Id = wH_To_Id;
            transfer.Item_Id = item_Id;
            transfer.Quantity = quantity;
            transfer.Sup_Id = sup_Id;
            transfer.Pro_Date = pro_Date;
            transfer.Validation = validation;
            return transfer;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Trans_Id
        {
            get
            {
                return _Trans_Id;
            }
            set
            {
                if (_Trans_Id != value)
                {
                    OnTrans_IdChanging(value);
                    ReportPropertyChanging("Trans_Id");
                    _Trans_Id = StructuralObject.SetValidValue(value, "Trans_Id");
                    ReportPropertyChanged("Trans_Id");
                    OnTrans_IdChanged();
                }
            }
        }
        private global::System.Int32 _Trans_Id;
        partial void OnTrans_IdChanging(global::System.Int32 value);
        partial void OnTrans_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WH_From_Id
        {
            get
            {
                return _WH_From_Id;
            }
            set
            {
                OnWH_From_IdChanging(value);
                ReportPropertyChanging("WH_From_Id");
                _WH_From_Id = StructuralObject.SetValidValue(value, "WH_From_Id");
                ReportPropertyChanged("WH_From_Id");
                OnWH_From_IdChanged();
            }
        }
        private global::System.Int32 _WH_From_Id;
        partial void OnWH_From_IdChanging(global::System.Int32 value);
        partial void OnWH_From_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WH_To_Id
        {
            get
            {
                return _WH_To_Id;
            }
            set
            {
                OnWH_To_IdChanging(value);
                ReportPropertyChanging("WH_To_Id");
                _WH_To_Id = StructuralObject.SetValidValue(value, "WH_To_Id");
                ReportPropertyChanged("WH_To_Id");
                OnWH_To_IdChanged();
            }
        }
        private global::System.Int32 _WH_To_Id;
        partial void OnWH_To_IdChanging(global::System.Int32 value);
        partial void OnWH_To_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Item_Id
        {
            get
            {
                return _Item_Id;
            }
            set
            {
                OnItem_IdChanging(value);
                ReportPropertyChanging("Item_Id");
                _Item_Id = StructuralObject.SetValidValue(value, "Item_Id");
                ReportPropertyChanged("Item_Id");
                OnItem_IdChanged();
            }
        }
        private global::System.Int32 _Item_Id;
        partial void OnItem_IdChanging(global::System.Int32 value);
        partial void OnItem_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value, "Quantity");
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Sup_Id
        {
            get
            {
                return _Sup_Id;
            }
            set
            {
                OnSup_IdChanging(value);
                ReportPropertyChanging("Sup_Id");
                _Sup_Id = StructuralObject.SetValidValue(value, "Sup_Id");
                ReportPropertyChanged("Sup_Id");
                OnSup_IdChanged();
            }
        }
        private global::System.Int32 _Sup_Id;
        partial void OnSup_IdChanging(global::System.Int32 value);
        partial void OnSup_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime Pro_Date
        {
            get
            {
                return _Pro_Date;
            }
            set
            {
                OnPro_DateChanging(value);
                ReportPropertyChanging("Pro_Date");
                _Pro_Date = StructuralObject.SetValidValue(value, "Pro_Date");
                ReportPropertyChanged("Pro_Date");
                OnPro_DateChanged();
            }
        }
        private global::System.DateTime _Pro_Date;
        partial void OnPro_DateChanging(global::System.DateTime value);
        partial void OnPro_DateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Validation
        {
            get
            {
                return _Validation;
            }
            set
            {
                OnValidationChanging(value);
                ReportPropertyChanging("Validation");
                _Validation = StructuralObject.SetValidValue(value, "Validation");
                ReportPropertyChanged("Validation");
                OnValidationChanged();
            }
        }
        private global::System.Int32 _Validation;
        partial void OnValidationChanging(global::System.Int32 value);
        partial void OnValidationChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Item", "Item")]
        public Item Item
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Transfer_Item", "Item").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Transfer_Item", "Item").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Item> ItemReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Item>("FriendsModel.FK_Transfer_Item", "Item");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Item>("FriendsModel.FK_Transfer_Item", "Item", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Supplier", "Supplier")]
        public Supplier Supplier
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("FriendsModel.FK_Transfer_Supplier", "Supplier").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("FriendsModel.FK_Transfer_Supplier", "Supplier").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Supplier> SupplierReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Supplier>("FriendsModel.FK_Transfer_Supplier", "Supplier");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Supplier>("FriendsModel.FK_Transfer_Supplier", "Supplier", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Warehouse", "Warehouse")]
        public Warehouse Warehouse
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse", "Warehouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> WarehouseReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse", "Warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse", "Warehouse", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Warehouse1", "Warehouse")]
        public Warehouse Warehouse1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse1", "Warehouse").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse1", "Warehouse").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Warehouse> Warehouse1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse1", "Warehouse");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Warehouse>("FriendsModel.FK_Transfer_Warehouse1", "Warehouse", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="FriendsModel", Name="Warehouse")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Warehouse : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Warehouse object.
        /// </summary>
        /// <param name="wH_Id">Initial value of the WH_Id property.</param>
        /// <param name="wH_Name">Initial value of the WH_Name property.</param>
        /// <param name="wH_Location">Initial value of the WH_Location property.</param>
        /// <param name="wH_Manager">Initial value of the WH_Manager property.</param>
        public static Warehouse CreateWarehouse(global::System.Int32 wH_Id, global::System.String wH_Name, global::System.String wH_Location, global::System.String wH_Manager)
        {
            Warehouse warehouse = new Warehouse();
            warehouse.WH_Id = wH_Id;
            warehouse.WH_Name = wH_Name;
            warehouse.WH_Location = wH_Location;
            warehouse.WH_Manager = wH_Manager;
            return warehouse;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 WH_Id
        {
            get
            {
                return _WH_Id;
            }
            set
            {
                if (_WH_Id != value)
                {
                    OnWH_IdChanging(value);
                    ReportPropertyChanging("WH_Id");
                    _WH_Id = StructuralObject.SetValidValue(value, "WH_Id");
                    ReportPropertyChanged("WH_Id");
                    OnWH_IdChanged();
                }
            }
        }
        private global::System.Int32 _WH_Id;
        partial void OnWH_IdChanging(global::System.Int32 value);
        partial void OnWH_IdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WH_Name
        {
            get
            {
                return _WH_Name;
            }
            set
            {
                OnWH_NameChanging(value);
                ReportPropertyChanging("WH_Name");
                _WH_Name = StructuralObject.SetValidValue(value, false, "WH_Name");
                ReportPropertyChanged("WH_Name");
                OnWH_NameChanged();
            }
        }
        private global::System.String _WH_Name;
        partial void OnWH_NameChanging(global::System.String value);
        partial void OnWH_NameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WH_Location
        {
            get
            {
                return _WH_Location;
            }
            set
            {
                OnWH_LocationChanging(value);
                ReportPropertyChanging("WH_Location");
                _WH_Location = StructuralObject.SetValidValue(value, false, "WH_Location");
                ReportPropertyChanged("WH_Location");
                OnWH_LocationChanged();
            }
        }
        private global::System.String _WH_Location;
        partial void OnWH_LocationChanging(global::System.String value);
        partial void OnWH_LocationChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String WH_Manager
        {
            get
            {
                return _WH_Manager;
            }
            set
            {
                OnWH_ManagerChanging(value);
                ReportPropertyChanging("WH_Manager");
                _WH_Manager = StructuralObject.SetValidValue(value, false, "WH_Manager");
                ReportPropertyChanged("WH_Manager");
                OnWH_ManagerChanged();
            }
        }
        private global::System.String _WH_Manager;
        partial void OnWH_ManagerChanging(global::System.String value);
        partial void OnWH_ManagerChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Exchange_Permission_Warehouse", "Export_Permission")]
        public EntityCollection<Export_Permission> Export_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Export_Permission>("FriendsModel.FK_Exchange_Permission_Warehouse", "Export_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Export_Permission>("FriendsModel.FK_Exchange_Permission_Warehouse", "Export_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Supply_Permission_Warehouse", "Supply_Permission")]
        public EntityCollection<Supply_Permission> Supply_Permission
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Supply_Permission>("FriendsModel.FK_Supply_Permission_Warehouse", "Supply_Permission");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Supply_Permission>("FriendsModel.FK_Supply_Permission_Warehouse", "Supply_Permission", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Warehouse", "Transfer")]
        public EntityCollection<Transfer> Transfers
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Warehouse", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Warehouse", "Transfer", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("FriendsModel", "FK_Transfer_Warehouse1", "Transfer")]
        public EntityCollection<Transfer> Transfers1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Warehouse1", "Transfer");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Transfer>("FriendsModel.FK_Transfer_Warehouse1", "Transfer", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
